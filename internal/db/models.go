// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"
)

type DeviceState string

const (
	DeviceStateDeploying      DeviceState = "deploying"
	DeviceStateManaged        DeviceState = "managed"
	DeviceStateUserUnenrolled DeviceState = "user_unenrolled"
	DeviceStateMissing        DeviceState = "missing"
)

func (e *DeviceState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DeviceState(s)
	case string:
		*e = DeviceState(s)
	default:
		return fmt.Errorf("unsupported scan type for DeviceState: %T", src)
	}
	return nil
}

type ManagementProtocol string

const (
	ManagementProtocolWindows ManagementProtocol = "windows"
	ManagementProtocolAgent   ManagementProtocol = "agent"
	ManagementProtocolApple   ManagementProtocol = "apple"
)

func (e *ManagementProtocol) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ManagementProtocol(s)
	case string:
		*e = ManagementProtocol(s)
	default:
		return fmt.Errorf("unsupported scan type for ManagementProtocol: %T", src)
	}
	return nil
}

type UserPermissionLevel string

const (
	UserPermissionLevelUser          UserPermissionLevel = "user"
	UserPermissionLevelAdministrator UserPermissionLevel = "administrator"
)

func (e *UserPermissionLevel) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserPermissionLevel(s)
	case string:
		*e = UserPermissionLevel(s)
	default:
		return fmt.Errorf("unsupported scan type for UserPermissionLevel: %T", src)
	}
	return nil
}

type Certificate struct {
	ID   string `json:"id"`
	Cert []byte `json:"cert"`
	Key  []byte `json:"key"`
}

type Device struct {
	ID          string             `json:"id"`
	TenantID    string             `json:"tenant_id"`
	Protocol    ManagementProtocol `json:"protocol"`
	Udid        string             `json:"udid"`
	Name        string             `json:"name"`
	Description sql.NullString     `json:"description"`
	Model       sql.NullString     `json:"model"`
	State       DeviceState        `json:"state"`
	Owner       sql.NullString     `json:"owner"`
	AzureDid    sql.NullString     `json:"azure_did"`
	EnrolledAt  time.Time          `json:"enrolled_at"`
}

type DeviceCache struct {
	DeviceID    int32         `json:"device_id"`
	PayloadID   sql.NullInt32 `json:"payload_id"`
	InventoryID sql.NullInt32 `json:"inventory_id"`
	CacheID     int32         `json:"cache_id"`
}

type DeviceInventory struct {
	ID       int32  `json:"id"`
	DeviceID int32  `json:"device_id"`
	Uri      string `json:"uri"`
	Format   string `json:"format"`
	Value    string `json:"value"`
}

type Group struct {
	ID          string         `json:"id"`
	TenantID    string         `json:"tenant_id"`
	Name        string         `json:"name"`
	Description sql.NullString `json:"description"`
}

type GroupDevice struct {
	GroupID  string `json:"group_id"`
	DeviceID string `json:"device_id"`
}

type GroupPolicy struct {
	GroupID  sql.NullString `json:"group_id"`
	PolicyID sql.NullString `json:"policy_id"`
}

type PoliciesPayload struct {
	ID       int32         `json:"id"`
	PolicyID sql.NullInt32 `json:"policy_id"`
	Uri      string        `json:"uri"`
	Format   string        `json:"format"`
	Type     string        `json:"type"`
	Value    string        `json:"value"`
	Exec     bool          `json:"exec"`
}

type Policy struct {
	ID          string         `json:"id"`
	TenantID    string         `json:"tenant_id"`
	Name        string         `json:"name"`
	Description sql.NullString `json:"description"`
}

type Tenant struct {
	ID            string         `json:"id"`
	DisplayName   string         `json:"display_name"`
	PrimaryDomain string         `json:"primary_domain"`
	Description   sql.NullString `json:"description"`
}

type TenantUser struct {
	UserUpn         string              `json:"user_upn"`
	TenantID        string              `json:"tenant_id"`
	PermissionLevel UserPermissionLevel `json:"permission_level"`
}

type User struct {
	Upn        string         `json:"upn"`
	Fullname   string         `json:"fullname"`
	Password   sql.NullString `json:"password"`
	MfaToken   sql.NullString `json:"mfa_token"`
	AzureadOid sql.NullString `json:"azuread_oid"`
	TenantID   sql.NullString `json:"tenant_id"`
}
