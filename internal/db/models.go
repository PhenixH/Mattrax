// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"
)

type DeviceState string

const (
	DeviceStateDeploying      DeviceState = "deploying"
	DeviceStateManaged        DeviceState = "managed"
	DeviceStateUserUnenrolled DeviceState = "user_unenrolled"
	DeviceStateMissing        DeviceState = "missing"
)

func (e *DeviceState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DeviceState(s)
	case string:
		*e = DeviceState(s)
	default:
		return fmt.Errorf("unsupported scan type for DeviceState: %T", src)
	}
	return nil
}

type EnrollmentType string

const (
	EnrollmentTypeUser   EnrollmentType = "User"
	EnrollmentTypeDevice EnrollmentType = "Device"
)

func (e *EnrollmentType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EnrollmentType(s)
	case string:
		*e = EnrollmentType(s)
	default:
		return fmt.Errorf("unsupported scan type for EnrollmentType: %T", src)
	}
	return nil
}

type Certificate struct {
	ID   string `json:"id"`
	Cert []byte `json:"cert"`
	Key  []byte `json:"key"`
}

type Device struct {
	ID               int32          `json:"id"`
	Udid             string         `json:"udid"`
	State            DeviceState    `json:"state"`
	EnrollmentType   EnrollmentType `json:"enrollment_type"`
	Name             string         `json:"name"`
	Model            string         `json:"model"`
	SerialNumber     string         `json:"serial_number"`
	OperatingSystem  string         `json:"operating_system"`
	AzureDid         string         `json:"azure_did"`
	NodecacheVersion string         `json:"nodecache_version"`
	Lastseen         time.Time      `json:"lastseen"`
	LastseenStatus   int32          `json:"lastseen_status"`
	EnrolledAt       time.Time      `json:"enrolled_at"`
	EnrolledBy       string         `json:"enrolled_by"`
}

type DeviceCache struct {
	DeviceID  int32 `json:"device_id"`
	PayloadID int32 `json:"payload_id"`
	CacheID   int32 `json:"cache_id"`
}

type Group struct {
	ID          int32  `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Priority    int16  `json:"priority"`
}

type GroupDevice struct {
	GroupID  int32 `json:"group_id"`
	DeviceID int32 `json:"device_id"`
}

type GroupPolicy struct {
	GroupID  sql.NullInt32 `json:"group_id"`
	PolicyID sql.NullInt32 `json:"policy_id"`
}

type PoliciesPayload struct {
	ID       int32         `json:"id"`
	PolicyID sql.NullInt32 `json:"policy_id"`
	Uri      string        `json:"uri"`
	Format   string        `json:"format"`
	Type     string        `json:"type"`
	Value    string        `json:"value"`
	Exec     bool          `json:"exec"`
}

type Policy struct {
	ID          int32  `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Priority    int16  `json:"priority"`
}

type Setting struct {
	TenantName        string `json:"tenant_name"`
	TenantEmail       string `json:"tenant_email"`
	TenantWebsite     string `json:"tenant_website"`
	TenantPhone       string `json:"tenant_phone"`
	TenantAzureid     string `json:"tenant_azureid"`
	DisableEnrollment bool   `json:"disable_enrollment"`
}

type User struct {
	Upn        string         `json:"upn"`
	Fullname   string         `json:"fullname"`
	Password   sql.NullString `json:"password"`
	MfaToken   sql.NullString `json:"mfa_token"`
	AzureadOid sql.NullString `json:"azuread_oid"`
}
